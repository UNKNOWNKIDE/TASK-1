import tkinter as tk
from tkinter import messagebox

def caesar_cipher(text, shift, mode='encrypt'):

    if mode == 'decrypt':
        shift = -shift

    result = []
    for char in text:
        if char.isalpha():
            base = ord('A') if char.isupper() else ord('a')

            # Shift character and wrap around the alphabet

            result.append(chr((ord(char) - base + shift) % 26 + base))
        else:

            # Non-alphabetical characters are unchanged
            
            result.append(char)

    return ''.join(result)

def process_input():
    text = entry_text.get()
    shift = shift_entry.get()
    mode = mode_var.get()

    if not shift.isdigit():
        messagebox.showerror("Invalid Input", "Shift value must be an integer.")
        return

    shift = int(shift)

    result = caesar_cipher(text, shift, mode)
    result_label.config(text=f"Result: {result}")

def create_gui():
    global entry_text, shift_entry, mode_var, result_label

    root = tk.Tk()
    root.title("Caesar Cipher")

    # Text input
    tk.Label(root, text="Enter Text:").grid(row=0, column=0, padx=10, pady=10)
    entry_text = tk.Entry(root, width=40)
    entry_text.grid(row=0, column=1, padx=10, pady=10)

    # Shift input
    tk.Label(root, text="Enter Shift:").grid(row=1, column=0, padx=10, pady=10)
    shift_entry = tk.Entry(root, width=10)
    shift_entry.grid(row=1, column=1, padx=10, pady=10, sticky="w")

    # Mode selection
    tk.Label(root, text="Mode:").grid(row=2, column=0, padx=10, pady=10)
    mode_var = tk.StringVar(value="encrypt")
    tk.Radiobutton(root, text="Encrypt", variable=mode_var, value="encrypt").grid(row=2, column=1, padx=10, pady=5, sticky="w")
    tk.Radiobutton(root, text="Decrypt", variable=mode_var, value="decrypt").grid(row=3, column=1, padx=10, pady=5, sticky="w")

    # Process button
    tk.Button(root, text="Process", command=process_input).grid(row=4, column=0, columnspan=2, pady=20)

    # Result label
    result_label = tk.Label(root, text="Result: ",font=("Arial",20))
    result_label.grid(row=5, column=0, columnspan=2, padx=10, pady=10)

    root.mainloop()

if __name__ == "__main__":
    create_gui()
